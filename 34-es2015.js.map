{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACA;AACZ;AACA;;AAE9D,0BAA0B,qBAAqB,kBAAkB,WAAW,YAAY,mBAAmB,iBAAiB,kBAAkB,4BAA4B,IAAI,OAAO,MAAM,wBAAwB,kBAAkB,WAAW,YAAY,wBAAwB,2CAA2C,WAAW,YAAY,QAAQ,2CAA2C,qCAAqC,4DAA4D,iBAAiB,qBAAqB,oBAAoB,0DAA0D,8CAA8C,4BAA4B,+CAA+C,kBAAkB,4BAA4B,8CAA8C,kBAAkB,gCAAgC,iBAAiB,iBAAiB,uBAAuB,uBAAuB,oBAAoB,6BAA6B,4CAA4C,4BAA4B,eAAe,kBAAkB,yBAAyB,0CAA0C,yBAAyB,2CAA2C,gCAAgC,sDAAsD,oBAAoB,6BAA6B,sBAAsB,iBAAiB,UAAU,gFAAgF,4BAA4B,4BAA4B,GAAG,UAAU,KAAK,WAAW,6BAA6B,GAAG,sBAAsB,KAAK,uBAAuB,0BAA0B,GAAG,uBAAuB,KAAK,0BAA0B,wBAAwB,GAAG,sBAAsB,YAAY,IAAI,0BAA0B,YAAY,KAAK,sBAAsB,aAAa,4BAA4B,KAAK,0BAA0B,kCAAkC,GAAG,4BAA4B,sBAAsB,IAAI,8BAA8B,wBAAwB,KAAK,8BAA8B,0BAA0B;;AAEhnE;AACA;AACA,IAAI,4DAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2DAAM;AAC3C,iBAAiB,mEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAU;AAC3B;AACA,oBAAoB,8DAAQ,iBAAiB,8DAAQ;AACrD;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,YAAY,4DAAC,CAAC,oDAAI,GAAG,QAAQ,4DAAkB;AAC/C;AACA,oBAAoB,YAAY;AAChC,2CAA2C,2DAAM;AACjD,OAAO,sDAAsD,qCAAqC,KAAK,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAC,SAAS,0DAA0D,EAAE,4DAAC,YAAY,qHAAqH,qCAAqC,KAAK,EAAE;AAC9P;AACA;AACA;AACA;AACA,UAAU,4DAAC,SAAS,0DAA0D,EAAE,4DAAC,UAAU,0DAA0D;AACrJ;AACA;;AAEkC","file":"34-es2015.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-e806d1f6.js';\nimport { c as config, b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;transform-origin:center;position:absolute;width:100%;height:100%;transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{animation:spinner-dots 1s linear infinite}:host(.spinner-circular){animation:spinner-circular linear infinite}:host(.spinner-circular) circle{animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{animation-play-state:paused}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-scale-out{0%{transform:scale(1, 1)}100%{transform:scale(0, 0)}}@keyframes spinner-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes spinner-dots{0%{transform:scale(1, 1);opacity:0.9}50%{transform:scale(0.4, 0.4);opacity:0.3}100%{transform:scale(1, 1);opacity:0.9}}@keyframes spinner-circular{100%{transform:rotate(360deg)}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\n\nconst Spinner = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, the spinner's animation will be paused.\n     */\n    this.paused = false;\n  }\n  getName() {\n    const spinnerName = this.name || config.get('spinner');\n    const mode = getIonMode(this);\n    if (spinnerName) {\n      return spinnerName;\n    }\n    return (mode === 'ios') ? 'lines' : 'circular';\n  }\n  render() {\n    const self = this;\n    const mode = getIonMode(self);\n    const spinnerName = self.getName();\n    const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n    const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n    const svgs = [];\n    if (spinner.circles !== undefined) {\n      for (let i = 0; i < spinner.circles; i++) {\n        svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n      }\n    }\n    else if (spinner.lines !== undefined) {\n      for (let i = 0; i < spinner.lines; i++) {\n        svgs.push(buildLine(spinner, duration, i, spinner.lines));\n      }\n    }\n    return (h(Host, { class: createColorClasses(self.color, {\n        [mode]: true,\n        [`spinner-${spinnerName}`]: true,\n        'spinner-paused': !!self.paused || config.getBoolean('_testing')\n      }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n  }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\nSpinner.style = spinnerCss;\n\nexport { Spinner as ion_spinner };\n"],"sourceRoot":"webpack:///"}