{"version":3,"sources":["webpack:///src/app/pages/angular-material/components/mat-sort-header/mat-sort-header.module.ts","webpack:///src/app/pages/angular-material/components/mat-sort-header/mat-sort-header.page.ts","webpack:///src/app/pages/angular-material/components/mat-sort-header/mat-sort-header.page.html"],"names":["routes","path","component","MatSortHeaderPageModule","forChild","imports","declarations","MatSortHeaderPage","desserts","name","calories","fat","carbs","protein","sortedData","slice","sort","data","active","direction","a","b","isAsc","compare","sortData","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-angular-material-components-mat-sort-header-mat-sort-header-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MatSortHeaderPage } from './mat-sort-header.page';\r\nimport {MatSortModule} from '@angular/material/sort';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MatSortHeaderPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    MatSortModule\r\n  ],\r\n  declarations: [MatSortHeaderPage]\r\n})\r\nexport class MatSortHeaderPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Sort } from '@angular/material/sort';\r\n\r\nexport interface Dessert {\r\n  calories: number;\r\n  carbs: number;\r\n  fat: number;\r\n  name: string;\r\n  protein: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-mat-sort-header',\r\n  templateUrl: './mat-sort-header.page.html',\r\n  styleUrls: ['./mat-sort-header.page.scss'],\r\n})\r\nexport class MatSortHeaderPage implements OnInit {\r\n  desserts: Dessert[] = [\r\n    {name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4},\r\n    {name: 'Ice cream sandwich', calories: 237, fat: 9, carbs: 37, protein: 4},\r\n    {name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6},\r\n    {name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4},\r\n    {name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4},\r\n  ];\r\n\r\n  sortedData: Dessert[];\r\n\r\n\r\n  constructor() { \r\n    this.sortedData = this.desserts.slice();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.desserts.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'calories': return compare(a.calories, b.calories, isAsc);\r\n        case 'fat': return compare(a.fat, b.fat, isAsc);\r\n        case 'carbs': return compare(a.carbs, b.carbs, isAsc);\r\n        case 'protein': return compare(a.protein, b.protein, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Sort Header</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n  <table matSort (matSortChange)=\"sortData($event)\">\r\n    <tr>\r\n      <th mat-sort-header=\"name\">Dessert (100g)</th>\r\n      <th mat-sort-header=\"calories\">Calories</th>\r\n      <th mat-sort-header=\"fat\">Fat (g)</th>\r\n      <th mat-sort-header=\"carbs\">Carbs (g)</th>\r\n      <th mat-sort-header=\"protein\">Protein (g)</th>\r\n    </tr>\r\n\r\n    <tr *ngFor=\"let dessert of sortedData\">\r\n      <td>{{dessert.name}}</td>\r\n      <td>{{dessert.calories}}</td>\r\n      <td>{{dessert.fat}}</td>\r\n      <td>{{dessert.carbs}}</td>\r\n      <td>{{dessert.protein}}</td>\r\n    </tr>\r\n  </table>\r\n</ion-content>"]}