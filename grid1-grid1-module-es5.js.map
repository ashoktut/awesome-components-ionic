{"version":3,"sources":["webpack:///src/app/pages/samples/components/grids/grid1/grid1-routing.module.ts","webpack:///src/app/pages/samples/components/grids/grid1/grid1.module.ts","webpack:///src/app/pages/samples/components/grids/grid1/grid1.page.html","webpack:///src/app/pages/samples/components/grids/grid1/grid1.page.ts"],"names":["routes","path","component","Grid1PageRoutingModule","forChild","imports","exports","Grid1PageModule","declarations","Grid1Page","gridServ","segment","index","data","products","products_1","tabs","event","console","log","detail","value","i","slides","slideTo","getActiveIndex","then","title","drag","distanceToScroll","parseInt","document","getElementById","offsetWidth","scrollLeft","selector","templateUrl","styleUrls"],"mappings":"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","file":"grid1-grid1-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Grid1Page } from './grid1.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Grid1Page\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class Grid1PageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Grid1PageRoutingModule } from './grid1-routing.module';\r\n\r\nimport { Grid1Page } from './grid1.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Grid1PageRoutingModule\r\n  ],\r\n  declarations: [Grid1Page]\r\n})\r\nexport class Grid1PageModule {}\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/grids\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Shop Grid</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col *ngFor=\"let data of products;\" size=\"6\">\r\n        <ion-card class=\"card\" no-margin>\r\n          <ion-badge class=\"badge\" *ngIf=\"data.offer\">{{data.discount}}%</ion-badge>\r\n          <img [src]=\"data.image[0]\" [alt]=\"data.name\">\r\n          <ion-card-content>\r\n            <ion-card-title>\r\n              <ion-row>\r\n                <ion-col *ngIf=\"data.offer\" no-padding>\r\n                  <ion-text text-left><span class=\"price\"><span class=\"inline\">{{data.currency}}{{data.cost_price}}</span> <strong>{{data.currency}}{{gridServ.calculate(data.cost_price, data.discount)}}</strong></span></ion-text>\r\n                </ion-col>\r\n                <ion-col *ngIf=\"!data.offer\" no-padding>\r\n                  <ion-text text-left><span class=\"price\"><strong>{{data.currency}}{{data.cost_price}}</strong></span></ion-text>\r\n                </ion-col>\r\n              </ion-row>\r\n              <ion-row>\r\n                <ion-col text-left no-padding>\r\n                  <h6 text-left class=\"subtitle\">{{data.bought}}+ bought this</h6>\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-card-title>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { GridServiceService } from './../../../../../services/grid/grid-service.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IonSlides } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-grid1',\r\n  templateUrl: './grid1.page.html',\r\n  styleUrls: ['./grid1.page.scss'],\r\n})\r\nexport class Grid1Page implements OnInit {\r\n\r\n  @ViewChild('slides', { static: true }) slides: IonSlides;\r\n  public products: Array<any>;\r\n  segment = '';\r\n  index = 0;\r\n  data: Array<any> = [];\r\n\r\n  constructor(public gridServ: GridServiceService) {\r\n    this.products = this.gridServ.products_1;\r\n    this.data = this.gridServ.tabs;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  segmentChange(event) {\r\n    console.log('event', event)\r\n    this.segment = event.detail.value;\r\n  }\r\n\r\n  updateSlide(i) {\r\n    console.log('index', i, typeof (i))\r\n    this.slides.slideTo(i, 300)\r\n  }\r\n  \r\n  async change() {\r\n    await this.slides.getActiveIndex().then(data => this.index = data);\r\n    this.segment = this.data[this.index].title;\r\n    this.drag();\r\n  }\r\n\r\n  drag() {\r\n    let distanceToScroll = 0;\r\n    for (const index in this.data) {\r\n      if (parseInt(index) < this.index) {\r\n        distanceToScroll = distanceToScroll + document.getElementById('seg_' + index).offsetWidth + 24\r\n      }\r\n    }\r\n    document.getElementById('dag').scrollLeft = distanceToScroll;\r\n  }\r\n}\r\n"]}