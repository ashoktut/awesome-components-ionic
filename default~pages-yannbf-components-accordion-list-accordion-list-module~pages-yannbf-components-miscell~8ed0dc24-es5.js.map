{"version":3,"sources":["webpack:///src/app/components/yannbf/accordion-list/accordion-list.component.ts","webpack:///src/app/components/yannbf/accordion-list/accordion-list.component.html","webpack:///src/app/components/yannbf/flash-card/flash-card.component.ts","webpack:///src/app/components/yannbf/flash-card/flash-card.component.html","webpack:///src/app/components/yannbf/timeline/timeline.component.ts","webpack:///src/app/components/yannbf/timeline/timeline.component.html","webpack:///src/app/components/yannbf/timer-progress/timer-progress.component.ts","webpack:///src/app/components/yannbf/timer-progress/timer-progress.component.html","webpack:///src/app/components/yannbf/timer/timer.component.ts","webpack:///src/app/components/yannbf/timer/timer.component.html","webpack:///src/app/components/yannbf/yannbf.components.module.ts"],"names":["AccordionListComponent","renderer","sanitizer","headerColor","textColor","contentColor","hasMargin","expanded","setStyle","elementView","nativeElement","newHeight","console","log","color","bypassSecurityTrustStyle","toggleAccordion","selector","templateUrl","styleUrls","FlashCardComponent","flipped","flip","TimelineComponent","TimelineItemComponent","template","TimerProgressComponent","initTimer","timer","hasFinished","percent","increment","progress","transform","fixTransform","initProgressBar","timeInSeconds","seconds","runTimer","hasStarted","secondsRemaining","displayTime","getSecondsAsDigitalClock","timerTick","startTimer","setTimeout","inputSeconds","secNum","parseInt","toString","hours","Math","floor","minutes","hoursString","minutesString","secondsString","TimerComponent","components","YannbfComponentsModule","declarations","imports","exports"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;QAQaA,sB;AAYX,sCAAmBC,QAAnB,EAAgDC,SAAhD,EAAyE;AAAA;;AAAtD,aAAAD,QAAA,GAAAA,QAAA;AAA6B,aAAAC,SAAA,GAAAA,SAAA;AAV1B,aAAAC,WAAA,GAAsB,SAAtB;AACF,aAAAC,SAAA,GAAoB,MAApB;AACG,aAAAC,YAAA,GAAuB,SAAvB;AAEH,aAAAC,SAAA,GAAqB,IAArB;AAMwD;;;;mCAEjE;AACT,cAAI,CAAC,KAAKC,QAAV,EAAoB;AAClB,iBAAKN,QAAL,CAAcO,QAAd,CAAuB,KAAKC,WAAL,CAAiBC,aAAxC,EAAuD,QAAvD,EAAiE,IAAI,IAArE;AACD;AACF;;;0CAEiB;AAChB,eAAKH,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA,cAAMI,SAAS,GAAG,KAAKJ,QAAL,GAAgB,MAAhB,GAAyB,KAA3C;AACAK,iBAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,eAAKV,QAAL,CAAcO,QAAd,CAAuB,KAAKC,WAAL,CAAiBC,aAAxC,EAAuD,QAAvD,EAAiEC,SAAjE;AACD;;;wCAEeG,K,EAAe;AAC7B,iBAAO,KAAKZ,SAAL,CAAea,wBAAf,CAAwC,aAAaD,KAArD,CAAP;AACD;;;;;;;uBA7BUd,sB,EAAsB,wH,EAAA,uI;AAAA,K;;;YAAtBA,sB;AAAsB,mD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACRnC;;AAEE;;AAA+D;AAAA,mBAAS,IAAAgB,eAAA,EAAT;AAA0B,WAA1B;;AAE7D;;AACA;;AAAY;;AAAY;;AAC1B;;AACA;;AACE;;AACE;;AACF;;AAEF;;AAIF;;;;AAd0B;;AAAA;;AACG;;AAEb;;AAAA;;AAGe;;AAAA;;AAAkC;;;;;;;;;sEDApDhB,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTiB,kBAAQ,EAAE,8BADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;gBAEhC,mD;iBAAM,a;;;gBACN,mD;iBAAM,W;;;gBACN,mD;iBAAM,c;;;gBACN,mD;iBAAM,O;;;gBACN,mD;iBAAM,W;;;gBACN,mD;iBAAM,U;;;gBAEN,uD;iBAAU,kB,EAAoB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEjBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;QAQaC,kB;AAOX,oCAAc;AAAA;;AALd;AACA;AACA;AACO,aAAAC,OAAA,GAAmB,KAAnB;AAEU;;;;+BAEH;AACZ,eAAKA,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;mCAEU,CACV;;;;;;;uBAdUD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,+C;AAAA,6B;AAAA,c;AAAA,a;AAAA,4H;AAAA;AAAA;;;ACR/B;;AAA0B;AAAA,mBAAS,IAAAE,IAAA,EAAT;AAAe,WAAf;;AACtB;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AACJ;;;;AAR2C;;;;;;;;sEDQ9BF,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTH,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AER/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAOaI,iB;AAEX,mCAAc;AAAA;AAAE;;;;mCAEL,CAAE;;;;;;;uBAJFA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,+B;AAAA,6B;AAAA,c;AAAA,a;AAAA,+B;AAAA;AAAA;;;ACP9B;;AACE;;AAEA;;AAGF;;;;gBDYaC,qB;AAAqB,O;AAAA;;;;;sEAXrBD,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTN,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;QAWjBK,qB,GACX,iCAAc;AAAA;AAAE,K;;;uBADLA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,oC;AAAA,6B;AAAA,c;AAAA,a;AAAA;AAAA;;;AAFrB;;;;;;;;sEAEAA,qB,EAAqB;cAJjC,uDAIiC;eAJvB;AACTP,kBAAQ,EAAE,eADD;AAETQ,kBAAQ,EAAE;AAFD,S;AAIuB,Q;;;;;;;;;;;;;;;;;;;;AElBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBI;;AAA0G;;AAC7F;;;;;;;;AAGb;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAEpD;;AACA;;AACF;;;;;;;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAErC;;AACA;;AACF;;;;;;;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAErC;;AACA;;AACF;;;;;;;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACrC;;AACA;;AACF;;;;;;AAnBF;;AACE;;AAKA;;AAKA;;AAKA;;AAIF;;;;;;AAlBI;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAIuE;;AAAA;;;;;;AApC7E;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACF;;AACA;;AACE;;AAAwB;;AAAqB;;AAC/C;;AACF;;AACA;;AAEF;;AACA;;AAqBF;;;;;;AArC+B;;AAAA;;AACH;;AAAA;;AAGA;;AAAA;;AACI;;AAAA;;AAKA;;AAAA;;AAGhB;;AAAA;;AAGJ;;AAAA;;;;QDHCC,sB;AASX,sCAAoBxB,SAApB,EAA6C;AAAA;;AAAzB,aAAAA,SAAA,GAAAA,SAAA;AAA4B;;;;mCAErC;AACT,eAAKyB,SAAL;AACD;;;sCAEa;AACZ,iBAAO,KAAKC,KAAL,CAAWC,WAAlB;AACD;;;0CACiB;AAChB,eAAKC,OAAL,GAAe,GAAf;AACA,eAAKC,SAAL,GAAiB,MAAM,GAAvB;AACA,cAAMC,QAAQ,GAAG,YAAY,KAAKD,SAAL,GAAiB,KAAKD,OAAlC,GAA4C,MAA7D;AACA,eAAKG,SAAL,GAAiB,KAAK/B,SAAL,CAAea,wBAAf,CAAwCiB,QAAxC,CAAjB;AACA,eAAKE,YAAL,GAAoB,KAAKhC,SAAL,CAAea,wBAAf,CAAwCiB,QAAxC,CAApB;AACD;;;oCAEW;AACV,eAAKG,eAAL;;AACA,cAAI,CAAC,KAAKC,aAAV,EAAyB;AAAE,iBAAKA,aAAL,GAAqB,CAArB;AAAyB;;AAEpD,eAAKR,KAAL,GAAa;AACXS,mBAAO,EAAE,KAAKD,aADH;AAEXE,oBAAQ,EAAE,KAFC;AAGXC,sBAAU,EAAE,KAHD;AAIXV,uBAAW,EAAE,KAJF;AAKXW,4BAAgB,EAAE,KAAKJ;AALZ,WAAb;AAQA,eAAKR,KAAL,CAAWa,WAAX,GAAyB,KAAKC,wBAAL,CAA8B,KAAKd,KAAL,CAAWY,gBAAzC,CAAzB;AACD;;;qCAEY;AACX,eAAKZ,KAAL,CAAWW,UAAX,GAAwB,IAAxB;AACA,eAAKX,KAAL,CAAWU,QAAX,GAAsB,IAAtB;AACA,eAAKK,SAAL;AACD;;;qCAEY;AACX,eAAKf,KAAL,CAAWU,QAAX,GAAsB,KAAtB;AACD;;;sCAEa;AACZ,eAAKM,UAAL;AACD;;;oCAEW;AAAA;;AACVC,oBAAU,CAAC,YAAM;AACf,gBAAI,CAAC,KAAI,CAACjB,KAAL,CAAWU,QAAhB,EAA0B;AAAE;AAAS;;AACrC,iBAAI,CAACV,KAAL,CAAWY,gBAAX;AACA,iBAAI,CAACZ,KAAL,CAAWa,WAAX,GAAyB,KAAI,CAACC,wBAAL,CAA8B,KAAI,CAACd,KAAL,CAAWY,gBAAzC,CAAzB;AACA,iBAAI,CAACV,OAAL,GAAe,KAAI,CAACF,KAAL,CAAWY,gBAAX,GAA8B,KAAI,CAACZ,KAAL,CAAWS,OAAzC,GAAmD,GAAlE;AACA,iBAAI,CAACN,SAAL,GAAiB,MAAM,GAAvB;AACA,gBAAMC,QAAQ,GAAG,YAAY,KAAI,CAACD,SAAL,GAAiB,KAAI,CAACD,OAAlC,GAA4C,MAA7D;AACA,iBAAI,CAACG,SAAL,GAAiB,KAAI,CAAC/B,SAAL,CAAea,wBAAf,CAAwCiB,QAAxC,CAAjB;AACA,iBAAI,CAACE,YAAL,GAAoB,KAAI,CAAChC,SAAL,CAAea,wBAAf,CAAwCiB,QAAxC,CAApB;;AACA,gBAAI,KAAI,CAACJ,KAAL,CAAWY,gBAAX,GAA8B,CAAlC,EAAqC;AACnC,mBAAI,CAACG,SAAL;AACD,aAFD,MAEO;AACL,mBAAI,CAACf,KAAL,CAAWC,WAAX,GAAyB,IAAzB;AACD;AACF,WAdS,EAcP,IAdO,CAAV;AAeD;;;iDAEwBiB,Y,EAAsB;AAC7C,cAAMC,MAAM,GAAGC,QAAQ,CAACF,YAAY,CAACG,QAAb,EAAD,EAA0B,EAA1B,CAAvB,CAD6C,CACS;;AACtD,cAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAG,IAApB,CAAd;AACA,cAAMM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACL,MAAM,GAAIG,KAAK,GAAG,IAAnB,IAA4B,EAAvC,CAAhB;AACA,cAAMb,OAAO,GAAGU,MAAM,GAAIG,KAAK,GAAG,IAAlB,GAA2BG,OAAO,GAAG,EAArD;AACA,cAAIC,WAAW,GAAG,EAAlB;AACA,cAAIC,aAAa,GAAG,EAApB;AACA,cAAIC,aAAa,GAAG,EAApB;;AACA,cAAIN,KAAK,GAAG,CAAZ,EAAe;AACXI,uBAAW,GAAIJ,KAAK,GAAG,EAAT,GAAe,MAAMA,KAAN,GAAc,GAA7B,GAAmCA,KAAK,CAACD,QAAN,KAAmB,GAApE;AACH;;AACDM,uBAAa,GAAIF,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAAO,CAACJ,QAAR,EAAjD;AACAO,uBAAa,GAAInB,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAAO,CAACY,QAAR,EAAjD;AACA,iBAAOK,WAAW,GAAGC,aAAd,GAA8B,GAA9B,GAAoCC,aAA3C;AACD;;;;;;;uBAvFU9B,sB,EAAsB,uI;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,ssB;AAAA;AAAA;ACjBnC;;;;AAAU;;;;;;;;;sEDiBGA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTT,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;gBAEhC;;;;;;;;;;;;;;;;;;;;AEnBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AAEE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACuB;;AACV;;;;;;;;AAGb;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAEpD;;AACA;;AACF;;;;;;;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAErC;;AACA;;AACF;;;;;;;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAErC;;AACA;;AACF;;;;;;;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACrC;;AACA;;AACF;;;;;;AAnBF;;AACE;;AAKA;;AAKA;;AAKA;;AAIF;;;;;;AAlBI;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAIuE;;AAAA;;;;;;AA1B7E;;AACE;;AACE;;AAIA;;AAGF;;AACA;;AAqBF;;;;;;AA7BgB;;AAAA;;AAIA;;AAAA;;AAIJ;;AAAA;;;;QDOCsC,c;;;;;;;mCAKA;AACT,eAAK9B,SAAL;AACD;;;sCAEa;AACZ,iBAAO,KAAKC,KAAL,CAAWC,WAAlB;AACD;;;oCAEW;AACV,cAAI,CAAC,KAAKO,aAAV,EAAyB;AAAE,iBAAKA,aAAL,GAAqB,CAArB;AAAyB;;AAEpD,eAAKR,KAAL,GAAa;AACXS,mBAAO,EAAE,KAAKD,aADH;AAEXE,oBAAQ,EAAE,KAFC;AAGXC,sBAAU,EAAE,KAHD;AAIXV,uBAAW,EAAE,KAJF;AAKXW,4BAAgB,EAAE,KAAKJ;AALZ,WAAb;AAQA,eAAKR,KAAL,CAAWa,WAAX,GAAyB,KAAKC,wBAAL,CAA8B,KAAKd,KAAL,CAAWY,gBAAzC,CAAzB;AACD;;;qCAEY;AACX,eAAKZ,KAAL,CAAWW,UAAX,GAAwB,IAAxB;AACA,eAAKX,KAAL,CAAWU,QAAX,GAAsB,IAAtB;AACA,eAAKK,SAAL;AACD;;;qCAEY;AACX,eAAKf,KAAL,CAAWU,QAAX,GAAsB,KAAtB;AACD;;;sCAEa;AACZ,eAAKM,UAAL;AACD;;;oCAEW;AAAA;;AACVC,oBAAU,CAAC,YAAM;AACf,gBAAI,CAAC,MAAI,CAACjB,KAAL,CAAWU,QAAhB,EAA0B;AAAE;AAAS;;AACrC,kBAAI,CAACV,KAAL,CAAWY,gBAAX;AACA,kBAAI,CAACZ,KAAL,CAAWa,WAAX,GAAyB,MAAI,CAACC,wBAAL,CAA8B,MAAI,CAACd,KAAL,CAAWY,gBAAzC,CAAzB;;AACA,gBAAI,MAAI,CAACZ,KAAL,CAAWY,gBAAX,GAA8B,CAAlC,EAAqC;AACnC,oBAAI,CAACG,SAAL;AACD,aAFD,MAEO;AACL,oBAAI,CAACf,KAAL,CAAWC,WAAX,GAAyB,IAAzB;AACD;AACF,WATS,EASP,IATO,CAAV;AAUD;;;iDAEwBiB,Y,EAAsB;AAC7C,cAAMC,MAAM,GAAGC,QAAQ,CAACF,YAAY,CAACG,QAAb,EAAD,EAA0B,EAA1B,CAAvB,CAD6C,CACS;;AACtD,cAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAG,IAApB,CAAd;AACA,cAAMM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACL,MAAM,GAAIG,KAAK,GAAG,IAAnB,IAA4B,EAAvC,CAAhB;AACA,cAAMb,OAAO,GAAGU,MAAM,GAAIG,KAAK,GAAG,IAAlB,GAA2BG,OAAO,GAAG,EAArD;AACA,cAAIC,WAAW,GAAG,EAAlB;AACA,cAAIC,aAAa,GAAG,EAApB;AACA,cAAIC,aAAa,GAAG,EAApB;AACAF,qBAAW,GAAIJ,KAAK,GAAG,EAAT,GAAe,MAAMA,KAArB,GAA6BA,KAAK,CAACD,QAAN,EAA3C;AACAM,uBAAa,GAAIF,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAAO,CAACJ,QAAR,EAAjD;AACAO,uBAAa,GAAInB,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAAO,CAACY,QAAR,EAAjD;AACA,iBAAOK,WAAW,GAAG,GAAd,GAAoBC,aAApB,GAAoC,GAApC,GAA0CC,aAAjD;AACD;;;;;;;uBAlEUC,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,suB;AAAA;AAAA;ACjB3B;;;;AAAU;;;;;;;;;sEDiBGA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;gBAExB;;;;;;;;;;;;;;;;;;;;AEnBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUO,QAAMuC,UAAU,GAAG,CACxB,+FADwB,EAExB,mFAFwB,EAGxB,+FAHwB,EAIxB,qEAJwB,EAKxB,8EALwB,EAMxB,kFANwB,CAAnB;;QAeMC,sB;;;;;YAAAA;;;;yBAAAA,sB;AAAsB,O;AAAA,gBAHxB,CAAC,0DAAD,EAAc,4DAAd,CAGwB;;;;0HAAtBA,sB,EAAsB;AAAA,uBAdjC,+FAciC,EAbjC,mFAaiC,EAZjC,+FAYiC,EAXjC,qEAWiC,EAVjC,8EAUiC,EATjC,kFASiC;AATZ,kBAMX,0DANW,EAME,4DANF,CASY;AAHE,kBAXnC,+FAWmC,EAVnC,mFAUmC,EATnC,+FASmC,EARnC,qEAQmC,EAPnC,8EAOmC,EANnC,kFAMmC;AAGF,O;AATZ,K;;;;;sEASVA,sB,EAAsB;cALlC,sDAKkC;eALzB;AACRC,sBAAY,EAAE,CAACF,UAAD,CADN;AAERG,iBAAO,EAAE,CAAC,0DAAD,EAAc,4DAAd,CAFD;AAGRC,iBAAO,EAAE,CAACJ,UAAD;AAHD,S;AAKyB,Q","file":"default~pages-yannbf-components-accordion-list-accordion-list-module~pages-yannbf-components-miscell~8ed0dc24-es5.js","sourcesContent":["import { Component, OnInit, Input, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-component-accordion-list',\r\n  templateUrl: './accordion-list.component.html',\r\n  styleUrls: ['./accordion-list.component.scss'],\r\n})\r\nexport class AccordionListComponent implements OnInit {\r\n\r\n  @Input('headerColor') headerColor: string = '#F53D3D';\r\n  @Input('textColor') textColor: string = '#FFF';\r\n  @Input('contentColor') contentColor: string = '#F9F9F9';\r\n  @Input('title') title: string;\r\n  @Input('hasMargin') hasMargin: boolean = true;\r\n  @Input('expanded') expanded: boolean;\r\n\r\n  @ViewChild('accordionContent', { static: true }) elementView: ElementRef;\r\n\r\n\r\n  constructor(public renderer: Renderer2, private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.expanded) {\r\n      this.renderer.setStyle(this.elementView.nativeElement, 'height', 0 + 'px');\r\n    }\r\n  }\r\n\r\n  toggleAccordion() {\r\n    this.expanded = !this.expanded;\r\n    const newHeight = this.expanded ? '100%' : '0px';\r\n    console.log(newHeight);\r\n    this.renderer.setStyle(this.elementView.nativeElement, 'height', newHeight);\r\n  }\r\n\r\n  getDynamicColor(color: string) {\r\n    return this.sanitizer.bypassSecurityTrustStyle(`--myvar:` + color)\r\n  }\r\n\r\n}\r\n","<ion-list class=\"accordion-list\">\r\n\r\n  <ion-item lines=\"none\"  [style]=\"getDynamicColor(headerColor)\" (click)=\"toggleAccordion()\"\r\n    class=\"accordion-header\" [class.active]=\"expanded\">\r\n    <ion-icon slot=\"start\" name=\"ios-arrow-forward\"> </ion-icon>\r\n    <ion-label> {{ title }} </ion-label>\r\n  </ion-item>\r\n  <div class=\"expand\">\r\n    <section #accordionContent [style.background]=\"contentColor\" [class.active]=\"expanded\" class=\"accordion-content\">\r\n      <ng-content></ng-content>\r\n    </section>\r\n\r\n  </div>\r\n\r\n\r\n\r\n</ion-list>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IonCard } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-flash-card-component',\r\n  templateUrl: './flash-card.component.html',\r\n  styleUrls: ['./flash-card.component.scss'],\r\n})\r\nexport class FlashCardComponent implements OnInit {\r\n\r\n  // @ViewChild('fcContainer', { static: true }) fcContainer;\r\n  // @ViewChild('front', { static: true }) fcFront;\r\n  // @ViewChild('back', { static: true }) fcBack;\r\n  public flipped: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  public flip() {\r\n    this.flipped = !this.flipped;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"fc-container\" (click)=\"flip()\" [class.fc-back]=\"flipped\" #fcContainer>\r\n    <div class=\"front\" #front>\r\n        <ng-content  select=\".fc-front\"></ng-content>\r\n    </div>\r\n \r\n    <div class=\"back\" #back>\r\n        <ng-content select=\".fc-back\"></ng-content>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'timeline',\r\n  templateUrl: './timeline.component.html',\r\n  styleUrls: ['./timeline.component.scss']\r\n})\r\nexport class TimelineComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\r\n@Component({\r\n  selector: 'timeline-item',\r\n  template: '<ng-content></ng-content>'\r\n})\r\nexport class TimelineItemComponent {\r\n  constructor() {}\r\n}","<div class=\"timeline\">\r\n  <ng-content></ng-content>\r\n\r\n  <timeline-item>\r\n  </timeline-item>\r\n\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport interface CountdownTimer {\r\n  seconds: number;\r\n  secondsRemaining: number;\r\n  runTimer: boolean;\r\n  hasStarted: boolean;\r\n  hasFinished: boolean;\r\n  displayTime?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-timer-progress',\r\n  templateUrl: './timer-progress.component.html',\r\n  styleUrls: ['./timer-progress.component.scss'],\r\n})\r\nexport class TimerProgressComponent implements OnInit {\r\n\r\n  @Input() timeInSeconds: number;\r\n  timer: CountdownTimer;\r\n  increment;\r\n  transform;\r\n  percent;\r\n  fixTransform;\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    this.initTimer();\r\n  }\r\n\r\n  hasFinished() {\r\n    return this.timer.hasFinished;\r\n  }\r\n  initProgressBar() {\r\n    this.percent = 100;\r\n    this.increment = 180 / 100;\r\n    const progress = 'rotate(' + this.increment * this.percent + 'deg)';\r\n    this.transform = this.sanitizer.bypassSecurityTrustStyle(progress);\r\n    this.fixTransform = this.sanitizer.bypassSecurityTrustStyle(progress);\r\n  }\r\n\r\n  initTimer() {\r\n    this.initProgressBar();\r\n    if (!this.timeInSeconds) { this.timeInSeconds = 0; }\r\n\r\n    this.timer = {\r\n      seconds: this.timeInSeconds,\r\n      runTimer: false,\r\n      hasStarted: false,\r\n      hasFinished: false,\r\n      secondsRemaining: this.timeInSeconds\r\n    };\r\n\r\n    this.timer.displayTime = this.getSecondsAsDigitalClock(this.timer.secondsRemaining);\r\n  }\r\n\r\n  startTimer() {\r\n    this.timer.hasStarted = true;\r\n    this.timer.runTimer = true;\r\n    this.timerTick();\r\n  }\r\n\r\n  pauseTimer() {\r\n    this.timer.runTimer = false;\r\n  }\r\n\r\n  resumeTimer() {\r\n    this.startTimer();\r\n  }\r\n\r\n  timerTick() {\r\n    setTimeout(() => {\r\n      if (!this.timer.runTimer) { return; }\r\n      this.timer.secondsRemaining--;\r\n      this.timer.displayTime = this.getSecondsAsDigitalClock(this.timer.secondsRemaining);\r\n      this.percent = this.timer.secondsRemaining / this.timer.seconds * 100;\r\n      this.increment = 180 / 100;\r\n      const progress = 'rotate(' + this.increment * this.percent + 'deg)';\r\n      this.transform = this.sanitizer.bypassSecurityTrustStyle(progress);\r\n      this.fixTransform = this.sanitizer.bypassSecurityTrustStyle(progress);\r\n      if (this.timer.secondsRemaining > 0) {\r\n        this.timerTick();\r\n      } else {\r\n        this.timer.hasFinished = true;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  getSecondsAsDigitalClock(inputSeconds: number) {\r\n    const secNum = parseInt(inputSeconds.toString(), 10); // don't forget the second param\r\n    const hours = Math.floor(secNum / 3600);\r\n    const minutes = Math.floor((secNum - (hours * 3600)) / 60);\r\n    const seconds = secNum - (hours * 3600) - (minutes * 60);\r\n    let hoursString = '';\r\n    let minutesString = '';\r\n    let secondsString = '';\r\n    if (hours > 0) {\r\n        hoursString = (hours < 10) ? '0' + hours + ':' : hours.toString() + ':';\r\n    }\r\n    minutesString = (minutes < 10) ? '0' + minutes : minutes.toString();\r\n    secondsString = (seconds < 10) ? '0' + seconds : seconds.toString();\r\n    return hoursString + minutesString + ':' + secondsString;\r\n  }\r\n\r\n}\r\n","<ion-card *ngIf=\"timer\" >\r\n  <ion-card-header>\r\n    <div class=\"radial-progress\" data-progress=\"0\">\r\n      <div class=\"circle\">\r\n        <div class=\"mask full\" [style.transform]=\"transform\">\r\n          <div class=\"fill\" [style.transform]=\"transform\"></div>\r\n        </div>\r\n        <div class=\"mask half\">\r\n          <div class=\"fill\" [style.transform]=\"transform\"></div>\r\n          <div class=\"fill fix\" [style.transform]=\"fixTransform\"></div>\r\n        </div>\r\n        <div class=\"shadow\"></div>\r\n      </div>\r\n      <div class=\"inset\">\r\n        <div class=\"percentage\">{{timer.displayTime}}</div>\r\n      </div>\r\n    </div>\r\n    <ion-button *ngIf=\"!timeInSeconds || timeInSeconds == 0\" fill=\"clear\" expand=\"block\" class=\"timer-button\">Timer set up\r\n      incorrectly</ion-button>\r\n  </ion-card-header>\r\n  <ion-item *ngIf=\"timeInSeconds && timeInSeconds > 0\">\r\n    <ion-button fill=\"clear\" class=\"large\" color=\"danger\" (click)=\"initTimer()\" item-start\r\n      *ngIf=\"!timer.runTimer && (timer.hasStarted || timer.hasFinished) || timer.hasFinished\">\r\n      <ion-icon name=\"refresh\"></ion-icon>\r\n      Restart\r\n    </ion-button>\r\n    <ion-button fill=\"clear\" class=\"large\" (click)=\"pauseTimer()\" slot=\"end\"\r\n      *ngIf=\"timer.runTimer && timer.hasStarted && !timer.hasFinished\">\r\n      <ion-icon name=\"pause\"></ion-icon>\r\n      Pause\r\n    </ion-button>\r\n    <ion-button fill=\"clear\" class=\"large\" (click)=\"resumeTimer()\" slot=\"end\"\r\n      *ngIf=\"!timer.runTimer && timer.hasStarted && !timer.hasFinished\">\r\n      <ion-icon name=\"play\"></ion-icon>\r\n      Resume\r\n    </ion-button>\r\n    <ion-button fill=\"clear\" class=\"large\" (click)=\"startTimer()\" slot=\"end\" *ngIf=\"!timer.hasStarted\">\r\n      <ion-icon name=\"play\"></ion-icon>\r\n      Start\r\n    </ion-button>\r\n  </ion-item>\r\n</ion-card>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nexport interface CountdownTimer {\r\n  seconds: number;\r\n  secondsRemaining: number;\r\n  runTimer: boolean;\r\n  hasStarted: boolean;\r\n  hasFinished: boolean;\r\n  displayTime?: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.scss'],\r\n})\r\nexport class TimerComponent implements OnInit {\r\n\r\n  @Input() timeInSeconds: number;\r\n  timer: CountdownTimer;\r\n\r\n  ngOnInit() {\r\n    this.initTimer();\r\n  }\r\n\r\n  hasFinished() {\r\n    return this.timer.hasFinished;\r\n  }\r\n\r\n  initTimer() {\r\n    if (!this.timeInSeconds) { this.timeInSeconds = 0; }\r\n\r\n    this.timer = {\r\n      seconds: this.timeInSeconds,\r\n      runTimer: false,\r\n      hasStarted: false,\r\n      hasFinished: false,\r\n      secondsRemaining: this.timeInSeconds\r\n    };\r\n\r\n    this.timer.displayTime = this.getSecondsAsDigitalClock(this.timer.secondsRemaining);\r\n  }\r\n\r\n  startTimer() {\r\n    this.timer.hasStarted = true;\r\n    this.timer.runTimer = true;\r\n    this.timerTick();\r\n  }\r\n\r\n  pauseTimer() {\r\n    this.timer.runTimer = false;\r\n  }\r\n\r\n  resumeTimer() {\r\n    this.startTimer();\r\n  }\r\n\r\n  timerTick() {\r\n    setTimeout(() => {\r\n      if (!this.timer.runTimer) { return; }\r\n      this.timer.secondsRemaining--;\r\n      this.timer.displayTime = this.getSecondsAsDigitalClock(this.timer.secondsRemaining);\r\n      if (this.timer.secondsRemaining > 0) {\r\n        this.timerTick();\r\n      } else {\r\n        this.timer.hasFinished = true;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  getSecondsAsDigitalClock(inputSeconds: number) {\r\n    const secNum = parseInt(inputSeconds.toString(), 10); // don't forget the second param\r\n    const hours = Math.floor(secNum / 3600);\r\n    const minutes = Math.floor((secNum - (hours * 3600)) / 60);\r\n    const seconds = secNum - (hours * 3600) - (minutes * 60);\r\n    let hoursString = '';\r\n    let minutesString = '';\r\n    let secondsString = '';\r\n    hoursString = (hours < 10) ? '0' + hours : hours.toString();\r\n    minutesString = (minutes < 10) ? '0' + minutes : minutes.toString();\r\n    secondsString = (seconds < 10) ? '0' + seconds : seconds.toString();\r\n    return hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n}\r\n","<ion-card *ngIf=\"timer\">\r\n  <ion-card-header>\r\n    <ion-button *ngIf=\"timeInSeconds && timeInSeconds > 0\" size=\"large\" expand=\"block\" fill=\"clear\"\r\n      class=\"timer-button x-large\">\r\n      {{timer.displayTime}}\r\n    </ion-button>\r\n    <ion-button *ngIf=\"!timeInSeconds || timeInSeconds == 0\" size=\"large\" expand=\"block\" fill=\"clear\"\r\n      class=\"timer-button\">Timer set up\r\n      incorrectly</ion-button>\r\n  </ion-card-header>\r\n  <ion-item *ngIf=\"timeInSeconds && timeInSeconds > 0\">\r\n    <ion-button fill=\"clear\" class=\"large\" color=\"danger\" (click)=\"initTimer()\" slot=\"start\"\r\n      *ngIf=\"!timer.runTimer && (timer.hasStarted || timer.hasFinished) || timer.hasFinished\">\r\n      <ion-icon name=\"refresh\"></ion-icon>\r\n      Restart\r\n    </ion-button>\r\n    <ion-button fill=\"clear\" class=\"large\" (click)=\"pauseTimer()\" slot=\"end\"\r\n      *ngIf=\"timer.runTimer && timer.hasStarted && !timer.hasFinished\">\r\n      <ion-icon name=\"pause\"></ion-icon>\r\n      Pause\r\n    </ion-button>\r\n    <ion-button fill=\"clear\" class=\"large\" (click)=\"resumeTimer()\" slot=\"end\"\r\n      *ngIf=\"!timer.runTimer && timer.hasStarted && !timer.hasFinished\">\r\n      <ion-icon name=\"play\"></ion-icon>\r\n      Resume\r\n    </ion-button>\r\n    <ion-button fill=\"clear\" class=\"large\" (click)=\"startTimer()\" slot=\"end\" *ngIf=\"!timer.hasStarted\">\r\n      <ion-icon name=\"play\"></ion-icon>\r\n      Start\r\n    </ion-button>\r\n  </ion-item>\r\n</ion-card>","import { FlashCardComponent } from './flash-card/flash-card.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { AccordionListComponent } from './accordion-list/accordion-list.component';\r\nimport { TimerProgressComponent } from './timer-progress/timer-progress.component';\r\nimport { TimerComponent } from './timer/timer.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TimelineItemComponent, TimelineComponent } from './timeline/timeline.component';\r\n\r\n\r\nexport const components = [\r\n  AccordionListComponent,\r\n  FlashCardComponent,\r\n  TimerProgressComponent,\r\n  TimerComponent,\r\n  TimelineComponent,\r\n  TimelineItemComponent\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [components],\r\n  imports: [IonicModule, CommonModule],\r\n  exports: [components]\r\n})\r\nexport class YannbfComponentsModule { }\r\n"]}