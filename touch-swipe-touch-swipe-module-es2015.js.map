{"version":3,"sources":["./src/app/directives/social-gestures/social-gestures.directive.ts","./src/app/pages/samples/components/gestures/touch-swipe/touch-swipe-routing.module.ts","./src/app/pages/samples/components/gestures/touch-swipe/touch-swipe.module.ts","./src/app/pages/samples/components/gestures/touch-swipe/touch-swipe.page.ts","./src/app/pages/samples/components/gestures/touch-swipe/touch-swipe.page.html"],"names":[],"mappings":"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","file":"touch-swipe-touch-swipe-module-es2015.js","sourcesContent":["/**\n * By\n * https://medium.com/@JordanBenge/ionic-4-gestures-made-easy-5ce30aa82b7b\n */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { GestureController } from '@ionic/angular';\n\nexport type gestureNames = 'tap' | 'doubleTap' | 'press' | 'swipe';\n\nexport type directionNames = 'up' | 'down' | 'left' | 'right';\n\nexport type reportInterval = 'start' | 'live' | 'end';\n\nexport interface Gesture {\n  name: gestureNames; // The gestureName that you want to use. Defined above.\n  interval?: number; // Maximum time in ms between multiple taps\n  enabled?: boolean; // Whether the gesture is enabled or not.\n  direction?: directionNames[]; // Direction - used to Swipe\n  threshold?: number; // the minimum distance before reporting a swipe.\n  reportInterval?: reportInterval;\n}\n\n/**\n * In component.ts\n *\n * gestureOpts: Gesture[] = [\n * {name: 'tap'},\n * {name: 'doubleTap'},\n * {name: 'press'},\n * {name: 'swipe'},\n *  ];\n */\n\n/**\n * In component.html\n *\n * < ion-card\n * appSocialGestures\n * [gestureOpts]=\"gestureOpts\"\n * (tap)=\"onTap($event) \"\n * (doubleTap)=\"onDoubleTap($event) \"\n * (press)=\"onPress($event)\"\n * (swipe)=\"onSwipe($event)\"\n * (swipeEnd)=\"onMoveed($event)\"\n * > ... </ ion-card\n */\n\n@Directive({\n  selector: '[appSocialGestures]',\n})\n\nexport class SocialGestureDirective implements OnInit {\n\n  @Input() gestureOpts: Gesture[];\n  @Input() debugMode = false;\n\n\n  // Events we can listen to.\n  @Output() tap = new EventEmitter();\n  @Output() doubleTap = new EventEmitter();\n  @Output() press = new EventEmitter();\n  @Output() swipe = new EventEmitter();\n  @Output() swipeEnd = new EventEmitter();\n\n  tapGesture: Gesture = {\n    name: 'tap',\n    enabled: false,\n    interval: 250,\n  };\n  doubleTapGesture: Gesture = {\n    name: 'doubleTap',\n    enabled: false,\n    interval: 300,\n  };\n  pressGesture: Gesture = {\n    name: 'press',\n    enabled: false,\n    interval: 251,\n\n  };\n  swipeGesture: Gesture = {\n    name: 'swipe',\n    enabled: false,\n    interval: 250,\n    threshold: 15,\n    reportInterval: undefined,\n    direction: ['right', 'left'],\n  };\n  DIRECTIVE_GESTURES = [this.tapGesture, this.doubleTapGesture, this.pressGesture, this.swipeGesture];\n  GESTURE_CREATED = false;\n  lastTap = 0;\n  tapCount = 0;\n  tapTimeout = null;\n  pressTimeout = null;\n  isPressing: boolean = false;\n  moveTimeout = null;\n  isMoving: boolean = false;\n  lastSwipeReport = null;\n\n  constructor(private gestureCtrl: GestureController, private el: ElementRef) { }\n\n  ngOnInit() {\n    this.initSetupGestures();\n  }\n\n  @HostListener('touchstart', ['$event'])\n  @HostListener('touchend', ['$event'])\n  onPress(touch: TouchEvent) {\n    if (!this.pressGesture.enabled) {\n      return;\n    } // Press is not enabled, don't do anything.\n    this.handlePressing(touch.type);\n  }\n\n  @HostListener('click', ['$event'])\n  handleTaps(e: MouseEvent) {\n    const tapTimestamp = Math.floor(e.timeStamp);\n    const isDoubleTap = this.lastTap + this.tapGesture.interval > tapTimestamp;\n    if ((!this.tapGesture.enabled && !this.doubleTapGesture.enabled) || this.isPressing || this.isMoving) {\n      return this.resetTaps();\n    }\n    this.tapCount++;\n    if (isDoubleTap && this.doubleTapGesture.enabled) {\n      this.emitTaps();\n    } else if (!isDoubleTap) {\n      this.tapTimeout = setTimeout(() => this.emitTaps(), this.tapGesture.interval);\n    }\n    this.lastTap = tapTimestamp;\n  }\n\n  /**\n   * This will setup the gestures that the user has provided in their Gesture Options.\n   */\n  private initSetupGestures() {\n    this.DIRECTIVE_GESTURES.filter((dGesture: Gesture) => {\n      this.gestureOpts.find((gestureOpt: Gesture) => {\n        if (dGesture.name === gestureOpt.name) {\n          // get values gestureOpts param\n          dGesture.enabled = true;\n\n          if (dGesture.name === 'swipe') {\n            this.swipeGesture.reportInterval = gestureOpt.reportInterval || dGesture.reportInterval;\n            this.swipeGesture.direction = gestureOpt.direction || dGesture.direction;\n            this.createGesture();\n          } else {\n            dGesture.interval = gestureOpt.interval || dGesture.interval;\n            dGesture.threshold = gestureOpt.threshold || dGesture.threshold;\n          }\n        }\n      });\n    });\n  }\n\n  private handleMoving(moveType: string, $event: any) {\n    if (this.moveTimeout !== null) {\n      clearTimeout(this.moveTimeout);\n      this.moveTimeout = null;\n    }\n    const deltaX = $event.deltaX;\n    const deltaY = $event.deltaY;\n    const absDeltaX = Math.abs(deltaX);\n    const absDeltaY = Math.abs(deltaY);\n    const reportItvl = this.swipeGesture.reportInterval || 'live';\n    const threshold = this.swipeGesture.threshold;\n    if (absDeltaX < threshold && absDeltaY < threshold) {  // We haven't moved enough to consider it a swipe.\n      return;\n    }\n    const shouldReport = this.isMoving &&\n      (\n        (reportItvl === 'start' && this.lastSwipeReport === null) ||\n        (reportItvl === 'live') ||\n        (reportItvl === 'end' && moveType === 'moveend')\n      );\n    this.lastSwipeReport = $event.timeStamp;\n    if (shouldReport) {\n      const emitObj = {\n        dirX: undefined,\n        dirY: undefined,\n        swipeType: moveType,\n        ...$event,\n      };\n      if (absDeltaX > threshold) {\n        if (deltaX > 0) {\n          emitObj.dirX = 'right';\n        } else if (deltaX < 0) {\n          emitObj.dirX = 'left';\n        }\n      }\n      if (absDeltaY > threshold) {\n        if (deltaY > 0) {\n          emitObj.dirY = 'down';\n        } else if (deltaY < 0) {\n          emitObj.dirY = 'up';\n        }\n      }\n      const dirArray = this.swipeGesture.direction;\n      if (dirArray.includes(emitObj.dirX) || dirArray.includes(emitObj.dirY)) {\n\n        if (this.debugMode) {\n          console.log(`Swipe`);\n        }\n        this.swipe.emit(emitObj);\n      }\n    }\n    if ((moveType === 'moveend' && this.lastSwipeReport !== null)) {\n      this.isMoving = false;\n      this.lastSwipeReport = null;\n      this.swipeEnd.emit();\n\n    }\n  }\n\n  /**\n   * Touch event\n   * @param type touchend or touchstart\n   */\n  private handlePressing(type: string) {\n    if (type === 'touchstart') {\n      this.pressTimeout = setTimeout(() => {\n        this.isPressing = true;\n        if (this.debugMode) {\n          console.log('PressStart');\n        }\n        this.press.emit('start');\n\n      }, this.pressGesture.interval); // Considered a press if it's longer than interval (default: 251).\n    } else if (type === 'touchend') {\n      clearTimeout(this.pressTimeout);\n      if (this.isPressing) {\n        if (this.debugMode) {\n          console.log('PressEnd');\n        }\n        this.press.emit('end');\n        this.resetTaps(); // Just incase this gets passed as a tap event too.\n      }\n      // Clicks have a natural delay of 300ms, so we have to account for that, before resetting isPressing.\n      // Otherwise a tap event is emitted.\n      setTimeout(() => this.isPressing = false, 150);\n    }\n  }\n\n  /**\n   * Observe element gestures\n   */\n  private createGesture() {\n    if (this.GESTURE_CREATED) {\n      return;\n    }\n    const gesture = this.gestureCtrl.create({\n      gestureName: 'socialGesture',\n      el: this.el.nativeElement,\n      onStart: () => {\n        if (this.swipeGesture.enabled) {\n          this.isMoving = true;\n          this.moveTimeout = setInterval(() => {\n            this.isMoving = false;\n          }, 249);\n        }\n      },\n      onMove: ($event) => {\n        if (this.swipeGesture.enabled) {\n          this.handleMoving('moving', $event);\n        }\n      },\n      onEnd: ($event) => {\n        if (this.swipeGesture.enabled) {\n          this.handleMoving('moveend', $event);\n        }\n      },\n    }, true);\n    gesture.enable();\n    this.GESTURE_CREATED = true;\n  }\n\n  /**\n   * Send emit tags for clicks\n   */\n  private emitTaps() {\n    if (this.tapCount === 1 && this.tapGesture.enabled) {\n      if (this.debugMode) {\n        console.log('1 Tap ');\n      }\n      this.tap.emit();\n    } else if (this.tapCount === 2 && this.doubleTapGesture.enabled) {\n      if (this.debugMode) {\n        console.log('2 Tap');\n      }\n      this.doubleTap.emit();\n    }\n    this.resetTaps();\n  }\n\n  /**\n   * Clear counters and timeouts for taps\n   */\n  private resetTaps() {\n    clearTimeout(this.tapTimeout); // clear the old timeout\n    this.tapCount = 0;\n    this.tapTimeout = null;\n    this.lastTap = 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TouchSwipePage } from './touch-swipe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TouchSwipePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TouchSwipePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TouchSwipePageRoutingModule } from './touch-swipe-routing.module';\n\nimport { TouchSwipePage } from './touch-swipe.page';\n\nimport { SocialGestureDirective } from './../../../../../directives/social-gestures/social-gestures.directive';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TouchSwipePageRoutingModule\n  ],\n  declarations: [TouchSwipePage, SocialGestureDirective],\n})\nexport class TouchSwipePageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Gesture } from './../../../../../directives/social-gestures/social-gestures.directive';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-touch-swipe',\n  templateUrl: './touch-swipe.page.html',\n  styleUrls: ['./touch-swipe.page.scss'],\n})\nexport class TouchSwipePage implements OnInit {\n\n\n  gestureOptsTap: Gesture[] = [\n    { name: 'tap' },\n    { name: 'doubleTap' },\n  ];\n\n\n  gestureOptsPress: Gesture[] = [\n    { name: 'press', interval: 1500 },\n  ];\n\n\n  gestureOptsSwipe: Gesture[] = [\n    { name: 'swipe', direction: ['left', 'right'] },\n  ];\n\n  direction = null\n\n  constructor(\n    public toastController: ToastController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onTap() {\n    this.presentToast('Tap');\n  }\n\n  onDoubleTap() {\n    this.presentToast('DoubleTap');\n  }\n\n  onPress() {\n    this.presentToast('Long Press 1.5s');\n  }\n\n  onSwipe(e) {\n    this.direction = e.dirX;\n  }\n\n  onMoveed() {\n    this.presentToast('Swipe End ' + this.direction);\n  }\n\n\n  async presentToast(msgm: string) {\n    const toast = await this.toastController.create({\n      message: msgm,\n      duration: 500\n    });\n    toast.present();\n  }\n\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/gestures\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Touch Swipe</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-card color=\"primary\"\n  appSocialGestures\n  [gestureOpts]=\"gestureOptsTap\"\n  debugMode=\"true\"\n  (tap)=\"onTap()\"\n  (doubleTap)=\"onDoubleTap()\"\n  >\n    <ion-card-header>\n      <ion-card-subtitle>Exemple 01</ion-card-subtitle>\n      <ion-card-title>Tap and DoubleTap</ion-card-title>\n    </ion-card-header>\n  </ion-card>\n\n\n  <ion-card\n  color=\"secondary\"\n  appSocialGestures\n  [gestureOpts]=\"gestureOptsPress\"\n  debugMode=\"true\"\n  (press)=\"onPress()\"\n  >\n    <ion-card-header>\n      <ion-card-subtitle>Exemple 02</ion-card-subtitle>\n      <ion-card-title>LongPress after 1.5 seconds</ion-card-title>\n    </ion-card-header>\n  </ion-card>\n\n\n  <ion-card\n  color=\"tertiary\"\n  appSocialGestures\n  [gestureOpts]=\"gestureOptsSwipe\"\n  debugMode=\"true\"\n  (swipe)=\"onSwipe($event)\"\n  (swipeEnd)=\"onMoveed()\"\n  >\n    <ion-card-header>\n      <ion-card-subtitle>Exemple 03</ion-card-subtitle>\n      <ion-card-title>Swipe Lefth Right</ion-card-title>\n    </ion-card-header>\n  </ion-card>\n\n\n</ion-content>"],"sourceRoot":"webpack:///"}